package main

import (
	"fmt"
	"log"
)

func main() {
	// Создаем переменные x, i, val в которые запишем число в котором хотим поменять бит, номер бита
	// и во что установить бит.
	//&: поразрядная конъюнкция (операция И или поразрядное умножение). Возвращает 1, если оба из соответствующих разрядов обоих чисел равны 1. Возвращает 0, если разряд хотя бы одного числа равен 0
	//
	//|: поразрядная дизъюнкция (операция ИЛИ или поразрядное сложение). Возвращает 1, если хотя бы один из соответствующих разрядов обоих чисел равен 1
	//
	//^: поразрядное исключающее ИЛИ. Возвращает 1, если только один из соответствующих разрядов обоих чисел равен 1
	//
	//&^: сброс бита (И НЕ). В выражении z = x &^ y каждый бит z равен 0, если соответствующий бит y равен 1. Если бит в y равен 0, то берется значение соответствующего бита из x.

	var x int64
	var i, val int
	fmt.Print("Введите число в котором хотите поменять бит, номер бита и во что установить - 1 или 0: ")
	_, err := fmt.Scan(&x, &i, &val)
	if err != nil {
		log.Println(err.Error())
	}

	fmt.Printf("Число: %d в двоичной системе до изменения %b\n", x, x)
	// Если хотим установить  в 1, то используем OR, если в 0, то AND NOT.
	if val == 1 {
		x |= 1 << i
	} else {
		x &^= 1 << i
	}

	fmt.Printf("Число: %d в двоичной системе после изменения %b\n", x, x)
}
